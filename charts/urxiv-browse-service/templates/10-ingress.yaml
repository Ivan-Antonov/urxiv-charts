apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    subsystem: "{{ .Values.labels.subsystem }}"
    container: urxiv-browse-ingress
    service-group: api
    env: "{{ .Values.namespace }}"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/auth-url: "{{ .Values.ingress.auth_url }}"
    nginx.ingress.kubernetes.io/rewrite-target: "/*"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true" do not add
    # nginx.ingress.kubernetes.io/server-snippet: |
    #     if ($http_x_forwarded_proto = 'http') {
    #       return 301 https://$host$request_uri;
    #     }
spec:
  rules:
  - host: "{{ .Values.ingress.host }}"
    http:
      paths:
        - pathType: Exact
          path: "{{ .Values.ingress.path }}"
          backend:
            service:
              name: "{{ .Values.name }}"
              port:
                number: {{ .Values.port }}
  - host: "{{ cat "www." .Values.ingress.host | replace " " "" }}"
    http:
      paths:
        - pathType: Exact
          path: "{{ .Values.ingress.path }}"
          backend:
            service:
              name: "{{ .Values.name }}"
              port:
                number: {{ .Values.port }}
